name: CI Pipeline

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        run: |
          docker build -t my-app:${{ github.sha }} .
  
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm install
      - name: Run ESLint
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npm run test

  deploy:
    name: Deploy to GitHub Container Registry
    runs-on: ubuntu-latest
    needs: [build, lint, test] # Ensures deploy runs only if previous jobs pass
    if: github.ref == 'refs/heads/main' # Deploy only from main branch
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Tag Docker Image
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository }}/qr_generator"
          docker build -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:${{ github.sha }}" .
      
      - name: Push Docker Image to GHCR
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository }}/qr_generator"
          docker push "$IMAGE_NAME:latest"
          docker push "$IMAGE_NAME:${{ github.sha }}"
